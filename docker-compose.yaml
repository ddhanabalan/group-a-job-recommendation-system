
services:
  mysql_server:
    build:
      context: ./backend/mysqldb
      dockerfile: Dockerfile
    restart: always
    ports:
      - "3306:3306"
    environment:
      AUTHAPI_HOST: authapi
    networks:
      app_network:
        ipv4_address: 172.20.0.2
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  authapi:
    build:
      context: ./backend/auth
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      mysql_server:
        condition: service_healthy
    volumes:
      - ./backend/auth/AuthAPI:/app
    environment:
      SQL_HOST: mysql_server
      USER_API_HOST: userapi
      JOB_API_HOST: jobapi
    networks:
      app_network:
        ipv4_address: 172.20.0.3

  userapi:
    build:
      context: ./backend/user
      dockerfile: Dockerfile
    ports:
      - "8001:8000"
    depends_on:
      mysql_server:
        condition: service_healthy
    volumes:
      - ./backend/user/UserAPI:/app
    environment:
      SQL_HOST: mysql_server
      AUTH_API_HOST: authapi
      JOB_API_HOST: jobapi
    networks:
      app_network:
        ipv4_address: 172.20.0.4

  jobapi:
    build:
      context: ./backend/job
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    depends_on:
      mysql_server:
        condition: service_healthy
    volumes:
      - ./backend/job/JobAPI:/app
    environment:
      SQL_HOST: mysql_server
      AUTH_API_HOST: authapi
      USER_API_HOST: userapi
    networks:
      app_network:
        ipv4_address: 172.20.0.5
  utilsapi:
    build:
      context: ./backend/utils
      dockerfile: Dockerfile
    ports:
      - "8003:8000"
    depends_on:
      mysql_server:
        condition: service_healthy
    volumes:
      - ./backend/utils/UtilsAPI:/app
    networks:
      app_network:
        ipv4_address: 172.20.0.6


  modelapi:
    build:
      context: ./backend/model
      dockerfile: Dockerfile
    ports:
      - "8004:8000"
    depends_on:
      mysql_server:
        condition: service_healthy
    volumes:
      - ./backend/model/ModelAPI:/app
    environment:
      SQL_HOST: mysql_server
      AUTH_API_HOST: authapi
      JOB_API_HOST: jobapi
    networks:
      app_network:
        ipv4_address: 172.20.0.7

  frontend:
    build:
      context: ./front-end/job-recommendation-system
      dockerfile: Dockerfile
    ports:
      - "80:4173"
    depends_on:
      mysql_server:
        condition: service_healthy
    volumes:
      - ./front-end/job-recommendation-system/src:/app/src
    environment:
      SQL_HOST: mysql_server
      AUTH_API_HOST: authapi
      JOB_API_HOST: jobapi
    networks:
      app_network:
        ipv4_address: 172.20.0.8

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

